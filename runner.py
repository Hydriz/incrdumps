#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (C) 2012-2014 Hydriz Scholz
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

from datetime import datetime
import converter
import settings
import internetarchive
import os
import sys
import time

class IncrUpload:
	def __init__( self ):
		self.cwd = os.getcwd()
		self.dumpdate = ''
		self.filelist = {
			'-md5sums.txt',
			'-pages-meta-hist-incr.xml.bz2',
			'-stubs-meta-hist-incr.xml.gz',
			'maxrevid.txt',
			'status.txt',
		}
		# Get settings from settings.py
		self.accesskey = settings.accesskey
		self.dumpsdir = settings.dumpsdir
		self.collection = settings.collection
		self.mediatype = settings.mediatype
		self.secretkey = settings.secretkey
		self.sizehint = settings.sizehint

	def archive( self, wikidb ):
		x = converter.ASConverter()
		x.convertdate( self.dumpdate )
		dumpdate = x.date
		d = datetime.strptime( self.dumpdate, '%Y%m%d' )
		archivedate = d.strftime( '%Y-%m-%d' )
		x.convertdb( wikidb )
		if ( x.special ):
			sitename = x.sitename
			if ( wikidb.endswith( "wikimedia" ) ):
				language = x.sitename
				wikifamily = "Wikimedia"
			else:
				language = "English"
				wikifamily = "Wikimedia"
		elif ( x.site == "" ):
			sitename = wikidb
		else:
			sitename = "the %s" % ( x.sitename )
			language = x.langname
			wikifamily = x.site

		count = 0
		os.chdir( "%s/%s/%s" % ( self.dumpsdir, wikidb, self.dumpdate ) )
		iaitem = internetarchive.Item( 'incr-%s-%s' % ( wikidb, self.dumpdate ) )
		for thefile in self.filelist:
			curfile = ''.join( thefile )
			if ( curfile.startswith( '-' ) ):
				thedumpfile = '%s-%s%s' % ( wikidb, self.dumpdate, curfile )
			else:
				thedumpfile = curfile
			time.sleep(1) # Ctrl-C
			if ( count == 0 ):
				meta = dict(
					collection = self.collection,
					mediatype = self.mediatype,
					subject = "wiki;incremental;dumps;%s;%s;%s" % ( wikidb, language, wikifamily ),
					date = archivedate,
					title = "Wikimedia incremental dump files for %s on %s" % ( sitename, dumpdate ),
					description = "This is the incremental dump files for %s that is generated by Wikimedia on %s." % ( sitename, dumpdate ),
				)
				head = {
					'x-archive-size-hint': self.sizehint,
				}
				iaitem.upload( thedumpfile, metadata=meta, headers=head, queue_derive=False, retries=3, retries_sleep=10, access_key=self.accesskey, secret_key=self.secretkey )
				# Allow the system to have sufficient time to create the item
				time.sleep( 30 )
				count += 1
			else:
				iaitem.upload( thedumpfile, queue_derive=False, retries=3, retries_sleep=10, access_key=self.accesskey, secret_key=self.secretkey )
		os.chdir( self.cwd )

	def processArgs( self ):
		if ( sys.argv[1] == 'list' ):
			self.dumpdate = sys.argv[3]
			wikilist = open( sys.argv[2], 'r' ).read().splitlines()
			for wiki in wikilist:
				self.archive( wiki )
		else:
			self.dumpdate = sys.argv[2]
			self.archive( sys.argv[1] )

if __name__ == "__main__":
	IncrUpload = IncrUpload()
	IncrUpload.processArgs()
